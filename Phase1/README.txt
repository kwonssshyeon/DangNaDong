Project Topic : 여행 동행 중계 플랫폼 사이트 “당나동” DB 설계
Phase 1: 개념 스키마 설계 (Conceptual Schema Design)
1.구상개요
 여행 계획을 세우거나 또는 실제 여행지를 방문한 상황에서 등 다양한 상황에서 동행자를 구해야 하는 일이 있습니다. 이 플랫폼은 여행을 목적으로 여행 동반자를 구하는 사용자들을 연결해 주는 것이 목적입니다.
2.엔티티
(1) MEMEBER (사용자) : 
서비스를 이용하는 사람을 나타냅니다. 사용자는 id, pw, 이메일, 본인 소개 글, 프로필 이미지, 성별, 별명, 생년월일 정보로 이루어져 있습니다. 이 중 id, pw, 이메일, 생년월일 정보는 필수로 입력이 되어야 합니다. 가입한 사용자는 각각이 동행을 제안하는 사람이 될 수도, 동행을 신청하는 사람이 될 수도 있습니다. 본인이 스크랩 한 글을 조회할 수 있습니다.
(2) LOCATION(여행지):
여행 장소에 대한 정보를 의미합니다. 여행지id, 대륙, 나라 이름의 정보로 이루어져 있습니다.
(3) ONE_TO_ONE_CHAT(1:1 채팅):
동행자를 구하는 사람과 동행을 신청하는 사람 간의 채팅 기능을 의미합니다. id, 메세지, 작성 시간의 정보를 가집니다.
(4) REAL_TIME_CHAT(실시간 채팅):
해당 여행지 내의 상황을 공유하거나, 어떠한 요청을 할 때 사용됩니다. 예를들어, 현재 일본에 와 있는데 택시비를 아끼기 위해 같이 탈 사람을 실시간으로 구할 때 이용합니다. 실시간 채팅은 현재 여행지를 기준으로 그룹이 구분됩니다. 따라서 id, 메세지, 작성 시간과 전송자 위치 정보를 추가로 가집니다.


(5) TRABEL_COMPANION_POST(여행소개글):
사용자가 자신이 계획하는 여행이나, 다녀온 여행에 대해 다른 사람과 공유하기 위한 글입니다. id, 제목, 설명, 여행날짜, 여행기간, 작성시간, 예상 금액의 정보가 필요하고, 이 글을 조회하는 다른 사용자들은 스크랩을 할 수 있습니다.
(6) TRABEL_INTRODUTION_POST(동행글):
한 사용자가 자신의 여행계획을 포스팅하고, 이를 다른 사용자와 함께하기 위한 목적으로 작성되는 글입니다. id, 제목, 설명, 여행날짜, 여행기간, 작성시간, 예상 금액 정보에 추가로 구인인원, 구인성별, 구인 나이, 구인 국적, 구인 마감일, 구인 수가 추가로 필요합니다. 동행인원이 정해졌다면 구인목록에 동행인원의 정보를 가집니다. 여행소개글과 마찬가지로 이 글을 스크랩할 수 있습니다.
(7) COMMENT(댓글):
댓글은 여행소개글에 한해 생기는 정보입니다. 사용자는 여행소개글에 자신의 의견을 댓글로 남길수 있습니다. 이는 id, 댓글 내용, 댓글 작성일자의 정보를 포함합니다.
(8) APPLICATION_INFO(신청 정보):
회원이 여행소개글을 보고 동행을 신청했을 때 생기는 정보입니다.
같은 여행에 대한 신청은 한번만 가능하고, 신청을 했다고 해서 바로 동행이 결정되는 것은 아닙니다. 동행을 제안한 사용자가 이를 수락해야 최종 동행으로 인정됩니다. 필요한 정보는 신청자 id와 동행글 id를 복합키로 하는 id와, 요청상태, 신청 날짜가 있습니다.
3.관계 설명
1.CONTAIN
(1) 관계:
    1.동행 구인 게시글 → 여행지 ( N : M)
    2.게시글 → 여행지 ( N : M)

(2) relationship 의미:
 좌변의 entity가 우변의 entity를 포함함을 의미합니다. 게시글은 M개의 여행지를 포함할 수 있고, 여행지 또한 N개의 게시글에 포함될 수 있기에 N:M 관계를 가집니다. 또한, 동행 구인 게시글도 M개의 여행지를 포함할 수 있고, 여행지 또한 N개의 게시글에 포함될 수 있기에 N:M 관계를 가집니다.
2.WRITE
(1) 관계:
     1.사용자 → 동행 구인 게시글 ( 1 : N)
     2.사용자 → 게시글 ( 1 : N)
     3.사용자 → 댓글 ( 1 : N)
(2) relationship 의미:
 사용자가 글을 작성함을 의미합니다. 사용자 한명은 여러 개의 동행 구인 게시글, 게시글 그리고 댓글을 만들 수 있기때문에 1 : N 관계입니다.


3.SCRAP
(1) 관계:
   1.사용자 → 게시글 ( M : N)
(2) relationship 의미:
 사용자가 게시글을 스크랩한다는 것을 의미합니다. 사용자 개개인은 N개의 게시글을 스크랩이 가능하기 때문에 1 : N 관계입니다.


4.MANAGE
(1) 관계:
  1.사용자 → 신청정보 ( 1 : N)
(2) relationship 의미:
 동행 구인 글을 작성한 사용자에게 동행 신청이 된 사용자들의 정보를 관리할 수 있음을 의미합니다. 사용자 개개인은 N명의 사용자들에게 신청을 받을 수 있기 때문에 1 : N 관계입니다.


5.SEND
(1) 관계:
  1.사용자 → 1:1 채팅 ( 1 : N)
  2.사용자 → 실시간 채팅( 1: N)
(2) relationship 의미:
 사용자가 1:1 채팅 또는 실시간 채팅 상황에서 메세지를 보냄을 의미합니다. 한명의 사용자는 1:1 채팅과 나라별 채팅방에  N개의 채팅 메세지를 보낼 수 있으므로 1 : N 관계입니다.




6.HAS
(1) 관계:
  1.동행 구인 게시글 → 신청정보 ( 1 : N) 
  2.동행 구인 게시글 → 1:1 채팅 ( 1: N)
  3.여행지 → 실시간 채팅 ( 1 : N)
  4.게시글 → 댓글 ( 1: N)
(2) relationship 의미:
 한개의 동행 구인 게시글은 N명의 사용자들에게 동행 신청 정보와 1:1 채팅 메세지를 받을 수 있기 때문에 1 : N 관계입니다. 그리고 각 여행지(국가)에 따른 실시간 채팅에는 N개의 메세지가 존재하기 때문에 1:N 관계입니다. 마지막으로 한개의 게시글에는 N개의 댓글이 가능하므로 1 : N 관계 입니다.


7.LIKE
(1) 관계:
   1.사용자 → 동행 구인 게시글 ( N : M)
(2) relationship 의미:
 사용자가 동행 구인 게시글에 관심 표시를 하고, 그러한 게시글들을  따로 목록에 넣어 관리함을 의미합니다. N명의 사용자는 M개의 동행 구인 게시글에 관심 표시를 할 수 있기 때문에 N : M 관계입니다.


8.CREATE
(1) 관계:
  1.사용자 → 신청정보 ( 1 : N)
(2) relationship 의미:
 사용자가 동행을 신청하여 생긴 정보를 의미합니다. 한명의 사용자는 N개의 신청을 할 수 있기 때문에 1:N 관계입니다.